{"ast":null,"code":"var _jsxFileName = \"/Users/nayanpaavalar/Desktop/CS/Personal_Project1/real_hypertyper/server/client/src/components/DisplayRank.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './DisplayRank.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet ghostTimer = 0;\n\n//displays the live rankings of the ghost and the user\n//displays the user's words per minute\nfunction DisplayRank({\n  currentWord,\n  currentTime,\n  sampleAmount,\n  ghostFinish\n}) {\n  _s();\n  //ghostProgress is ghost completion percentage\n  const [ghostProgress, setGhostProgress] = useState(0.0);\n  //winner is either -1 (ghost), 0 (no one yet), or 1 (user)\n  const [winner, setWinner] = useState(0);\n\n  //starts ghostTimer\n  useEffect(() => {\n    ghostTimer = performance.now();\n  }, []);\n\n  //increments ghostProgress every second\n  //has certain checks\n  //makes sur ghostProgress isn't over 100%\n  //sets winner\n  useEffect(() => {\n    if (ghostProgress < 1) {\n      let myInterval = setInterval(() => {\n        //55 is the Ghost wpm\n        //60 is 60 seconds in a minute\n        console.log('before' + ghostProgress);\n        setGhostProgress(55 / 60 / sampleAmount + ghostProgress);\n        console.log(ghostProgress);\n        if (ghostProgress > 1 - 55 / 60 / sampleAmount) {\n          setGhostProgress(1);\n          let ghostTimerDone = performance.now();\n          console.log('DisplayRank ghostTime:  ' + ghostTimerDone - ghostTimer);\n          ghostFinish(ghostTimerDone - ghostTimer);\n          if (ghostProgress > currentWord / sampleAmount) {\n            setWinner(-1);\n          } else {\n            setWinner(1);\n          }\n        }\n        console.log(ghostProgress);\n      }, 1000);\n      return () => {\n        clearInterval(myInterval);\n      };\n    }\n  });\n  console.log('currentWord: ' + currentWord);\n  console.log('current time: ' + currentTime);\n  console.log('outside' + ghostProgress);\n  console.log(currentWord / sampleAmount);\n  //has certain checks\n  //makes sur ghostProgress isn't over 100%\n  //sets winner\n  //I dont know why I have to do it again but it just seems to work\n  if (ghostProgress > 1) {\n    setGhostProgress(1);\n    let ghostTimerDone = performance.now();\n    console.log('DisplayRank ghostTime:  ' + ghostTimerDone - ghostTimer);\n    ghostFinish(ghostTimerDone - ghostTimer);\n    if (ghostProgress > currentWord / sampleAmount) {\n      setWinner(-1);\n    } else {\n      setWinner(1);\n    }\n    console.log('here');\n  }\n\n  //returns the rankings based off whether the ghostProgress or the user progress was further\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rankingBox\",\n    children: [currentWord / sampleAmount > ghostProgress || winner === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayRanksBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerStatsBoxUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTitle\",\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerCompletion\",\n          children: [Math.floor(currentWord / sampleAmount * 100) > 100 ? 100 : Math.floor(currentWord / sampleAmount * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerWPM\",\n          children: [currentWord === 0 ? 0 : Math.floor(currentWord / (currentTime / 1000) * 60), \" WPM\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerStatsBoxGhost\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTitle\",\n          children: \"Ghost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerCompletion\",\n          children: [Math.floor(ghostProgress * 100) > 100 ? 100 : Math.floor(ghostProgress * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerWPM\",\n          children: \"55 WPM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayRanksBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerStatsBoxGhost\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTitle\",\n          children: \"Ghost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerCompletion\",\n          children: [Math.floor(ghostProgress * 100) > 100 ? 100 : Math.floor(ghostProgress * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerWPM\",\n          children: \"55 WPM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerStatsBoxUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTitle\",\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerCompletion\",\n          children: [Math.floor(currentWord / sampleAmount * 100) > 100 ? 100 : Math.floor(currentWord / sampleAmount * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerWPM\",\n          children: [currentWord === 0 ? 0 : Math.floor(currentWord / (currentTime / 1000) * 60), \" WPM\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ranksBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placement\",\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placement\",\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayRank, \"2Gzw+GavI9ZvMif3z5JHKghwtJk=\");\n_c = DisplayRank;\nexport default DisplayRank;\nvar _c;\n$RefreshReg$(_c, \"DisplayRank\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","ghostTimer","DisplayRank","currentWord","currentTime","sampleAmount","ghostFinish","_s","ghostProgress","setGhostProgress","winner","setWinner","performance","now","myInterval","setInterval","console","log","ghostTimerDone","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","_c","$RefreshReg$"],"sources":["/Users/nayanpaavalar/Desktop/CS/Personal_Project1/real_hypertyper/server/client/src/components/DisplayRank.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './DisplayRank.css';\n\nlet ghostTimer = 0;\n\n//displays the live rankings of the ghost and the user\n//displays the user's words per minute\nfunction DisplayRank({ currentWord, currentTime, sampleAmount, ghostFinish}) {\n  //ghostProgress is ghost completion percentage\n  const [ghostProgress, setGhostProgress] = useState(0.0);\n  //winner is either -1 (ghost), 0 (no one yet), or 1 (user)\n  const [winner, setWinner] = useState(0);\n\n  //starts ghostTimer\n  useEffect (() => {\n    ghostTimer = performance.now();\n  }, []);\n\n  //increments ghostProgress every second\n  //has certain checks\n    //makes sur ghostProgress isn't over 100%\n    //sets winner\n  useEffect(()=>{\n      if (ghostProgress < 1) {\n        let myInterval = setInterval(() => {\n              //55 is the Ghost wpm\n              //60 is 60 seconds in a minute\n              console.log('before' + ghostProgress);\n              setGhostProgress(((55/60)/sampleAmount) + ghostProgress); \n              console.log(ghostProgress);\n              if (ghostProgress > (1 - ((55/60)/sampleAmount))) {\n                setGhostProgress(1);\n                let ghostTimerDone = performance.now();\n                console.log('DisplayRank ghostTime:  ' + ghostTimerDone - ghostTimer);\n                ghostFinish(ghostTimerDone - ghostTimer);\n                if (ghostProgress > ((currentWord) / (sampleAmount))) {\n                  setWinner(-1);\n                }\n                else {\n                  setWinner(1);\n                }\n              }\n              console.log(ghostProgress);\n            }, 1000)\n            return ()=> {\n                clearInterval(myInterval);\n            };\n      }\n  });\n\n  console.log ('currentWord: ' + currentWord);\n  console.log( 'current time: ' + currentTime);\n  console.log('outside' + ghostProgress);\n  console.log(((currentWord) / (sampleAmount)));\n  //has certain checks\n    //makes sur ghostProgress isn't over 100%\n    //sets winner\n    //I dont know why I have to do it again but it just seems to work\n  if (ghostProgress > 1) {\n    setGhostProgress(1);\n    let ghostTimerDone = performance.now();\n    console.log('DisplayRank ghostTime:  ' + ghostTimerDone - ghostTimer);\n    ghostFinish(ghostTimerDone - ghostTimer);\n    if (ghostProgress > ((currentWord) / (sampleAmount))) {\n      setWinner(-1);\n    }\n    else {\n      setWinner(1);\n    }\n    console.log('here');\n  }\n\n  //returns the rankings based off whether the ghostProgress or the user progress was further\n\n  return (\n    <div className=\"rankingBox\">\n      { ((currentWord) / (sampleAmount)) > ghostProgress || winner === 1\n        ? \n        <div className=\"displayRanksBox\">\n          <div className=\"playerStatsBoxUser\">\n            <div className=\"playerTitle\">You</div>\n            <div className=\"playerCompletion\">{(Math.floor((currentWord / (sampleAmount)) * 100) > 100)\n                 ? 100\n                 : Math.floor((currentWord / (sampleAmount)) * 100)\n            }%</div>\n            <div className=\"playerWPM\">{currentWord === 0\n            ? 0\n            : Math.floor((currentWord / (currentTime / 1000)) * 60)} WPM</div>\n          </div>\n          <div className=\"playerStatsBoxGhost\">\n            <div className=\"playerTitle\">Ghost</div>\n            <div className=\"playerCompletion\">{Math.floor(ghostProgress * 100) > 100\n                  ? 100 \n                  : Math.floor(ghostProgress * 100)}%</div>\n            <div className=\"playerWPM\">55 WPM</div>\n          </div>\n        </div>\n        :\n        <div className=\"displayRanksBox\">\n          <div className=\"playerStatsBoxGhost\">\n            <div className=\"playerTitle\">Ghost</div>\n            <div className=\"playerCompletion\">{Math.floor(ghostProgress * 100) > 100\n                  ? 100 \n                  : Math.floor(ghostProgress * 100)}%</div>\n            <div className=\"playerWPM\">55 WPM</div>\n          </div>\n          <div className=\"playerStatsBoxUser\">\n            <div className=\"playerTitle\">You</div>\n            <div className=\"playerCompletion\">{(Math.floor((currentWord / (sampleAmount)) * 100) > 100)\n                 ? 100\n                 : Math.floor((currentWord / (sampleAmount)) * 100)\n            }%</div>\n            <div className=\"playerWPM\">{currentWord === 0\n            ? 0\n            : Math.floor((currentWord / (currentTime / 1000)) * 60)} WPM</div>\n          </div>\n        </div>\n      }\n      <div className=\"ranksBox\">\n        <div className=\"placement\">1</div>\n        <div className=\"placement\">2</div>\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayRank;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}