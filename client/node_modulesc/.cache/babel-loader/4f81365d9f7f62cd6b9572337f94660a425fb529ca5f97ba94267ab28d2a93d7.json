{"ast":null,"code":"var _jsxFileName = \"/Users/nayanpaavalar/Desktop/CS/Personal_Project1/real_hypertyper/server/client/src/components/Button.js\";\nimport className from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button({\n  children,\n  primary,\n  secondary,\n  success,\n  warning,\n  danger,\n  outline,\n  rounded,\n  ...rest //all remaining properties assigned are in rest\n}) {\n  const classes = className(rest.className, 'flex items-center px-3 py-1.5 border', {\n    'border-blue-500 bg-blue-500 text-white': primary,\n    'border-gray-900 bg-gray-900 text-white': secondary,\n    'border-green-500 bg-green-500 text-white': success,\n    'border-yellow-400 bg-yellow-400 text-white': warning,\n    'border-red-500 bg-red-500 text-white': danger,\n    'rounded-full': rounded,\n    'bg-white': outline,\n    'text-blue-500': outline && primary,\n    'text-gray-900': outline && secondary,\n    'text-green-500': outline && success,\n    'text-yellow-400': outline && warning,\n    'text-red-500': outline && danger\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ...rest,\n    className: classes,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_c = Button;\nButton.propTypes = {\n  checkVariationValue: ({\n    primary,\n    secondary,\n    success,\n    warning,\n    danger\n  }) => {\n    const count = Number(!!primary) + Number(!!secondary) + Number(!!warning) + Number(!!success) + Number(!!danger);\n    if (count > 1) {\n      return new Error('Only one of primary, secondary, success, warning, danger can be true');\n    }\n  }\n};\nexport default Button;\n/*import className from 'classnames';\n\n\n//JS can't have dashes in key unless its made a string\n\n\nfunction Button( {\n  children, \n  primary, \n  secondary,\n  success, \n  warning, \n  danger,\n  outline,\n  rounded,\n} ) {\nconst classes = className('flex px-3 py-1.5 border', {\n  'border-blue-500 bg-blue-500 text-white': primary,\n  'border-gray-900 bg-gray-900 text-white': secondary,\n  'border-green-500 bg-green-500 text-white': success,\n  'border-yellow-400 bg-yellow-400 text-white': warning,\n  'border-red-500 bg-red-500 text-white': danger,\n  'rounded-full': rounded,\n  'bg-white': outline,\n  'text-blue-500': outline && primary,\n  'text-gray-900': outline && secondary,\n  'text-green-500': outline && success,\n  'text-yellow-400': outline && warning,\n  'text-red-500': outline && danger,\n});\n//later class name overrides previous\n\n  return <button className={classes}>{children}</button>;\n}\n\nButton.propTypes = {\n  checkVariationValue: ({primary, secondary, success, warning, danger }) => {\n    const count = Number (!!primary)\n    + Number(!!secondary)\n    + Number(!!warning)\n    + Number(!!success)\n    + Number(!!danger)\n\n    if (count > 1) {\n      return new Error('Only on primary, secondary, success, warning, danger can be true');\n    }\n  },\n\n};\n\nexport default Button;*/\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["className","jsxDEV","_jsxDEV","Button","children","primary","secondary","success","warning","danger","outline","rounded","rest","classes","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","checkVariationValue","count","Number","Error","$RefreshReg$"],"sources":["/Users/nayanpaavalar/Desktop/CS/Personal_Project1/real_hypertyper/server/client/src/components/Button.js"],"sourcesContent":["import className from 'classnames';\n\nfunction Button({\n  children,\n  primary,\n  secondary,\n  success,\n  warning,\n  danger,\n  outline,\n  rounded,\n  ...rest   //all remaining properties assigned are in rest\n}) {\n  const classes = className(rest.className, 'flex items-center px-3 py-1.5 border', {\n      'border-blue-500 bg-blue-500 text-white': primary,\n      'border-gray-900 bg-gray-900 text-white': secondary,\n      'border-green-500 bg-green-500 text-white': success,\n      'border-yellow-400 bg-yellow-400 text-white': warning,\n      'border-red-500 bg-red-500 text-white': danger,\n      'rounded-full': rounded,\n      'bg-white': outline,\n      'text-blue-500': outline && primary,\n      'text-gray-900': outline && secondary,\n      'text-green-500': outline && success,\n      'text-yellow-400': outline && warning,\n      'text-red-500': outline && danger,\n   \n  });\n\n  return <button {...rest} className={classes}>{children}</button>;\n}\n\nButton.propTypes = {\n  checkVariationValue: ({ primary, secondary, success, warning, danger }) => {\n    const count =\n      Number(!!primary) +\n      Number(!!secondary) +\n      Number(!!warning) +\n      Number(!!success) +\n      Number(!!danger);\n\n    if (count > 1) {\n      return new Error(\n        'Only one of primary, secondary, success, warning, danger can be true'\n      );\n    }\n  },\n};\n\nexport default Button;\n/*import className from 'classnames';\n\n\n//JS can't have dashes in key unless its made a string\n\n\nfunction Button( {\n  children, \n  primary, \n  secondary,\n  success, \n  warning, \n  danger,\n  outline,\n  rounded,\n} ) {\nconst classes = className('flex px-3 py-1.5 border', {\n  'border-blue-500 bg-blue-500 text-white': primary,\n  'border-gray-900 bg-gray-900 text-white': secondary,\n  'border-green-500 bg-green-500 text-white': success,\n  'border-yellow-400 bg-yellow-400 text-white': warning,\n  'border-red-500 bg-red-500 text-white': danger,\n  'rounded-full': rounded,\n  'bg-white': outline,\n  'text-blue-500': outline && primary,\n  'text-gray-900': outline && secondary,\n  'text-green-500': outline && success,\n  'text-yellow-400': outline && warning,\n  'text-red-500': outline && danger,\n});\n//later class name overrides previous\n\n  return <button className={classes}>{children}</button>;\n}\n\nButton.propTypes = {\n  checkVariationValue: ({primary, secondary, success, warning, danger }) => {\n    const count = Number (!!primary)\n    + Number(!!secondary)\n    + Number(!!warning)\n    + Number(!!success)\n    + Number(!!danger)\n\n    if (count > 1) {\n      return new Error('Only on primary, secondary, success, warning, danger can be true');\n    }\n  },\n\n};\n\nexport default Button;*/"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,MAAMA,CAAC;EACdC,QAAQ;EACRC,OAAO;EACPC,SAAS;EACTC,OAAO;EACPC,OAAO;EACPC,MAAM;EACNC,OAAO;EACPC,OAAO;EACP,GAAGC,IAAI,CAAG;AACZ,CAAC,EAAE;EACD,MAAMC,OAAO,GAAGb,SAAS,CAACY,IAAI,CAACZ,SAAS,EAAE,sCAAsC,EAAE;IAC9E,wCAAwC,EAAEK,OAAO;IACjD,wCAAwC,EAAEC,SAAS;IACnD,0CAA0C,EAAEC,OAAO;IACnD,4CAA4C,EAAEC,OAAO;IACrD,sCAAsC,EAAEC,MAAM;IAC9C,cAAc,EAAEE,OAAO;IACvB,UAAU,EAAED,OAAO;IACnB,eAAe,EAAEA,OAAO,IAAIL,OAAO;IACnC,eAAe,EAAEK,OAAO,IAAIJ,SAAS;IACrC,gBAAgB,EAAEI,OAAO,IAAIH,OAAO;IACpC,iBAAiB,EAAEG,OAAO,IAAIF,OAAO;IACrC,cAAc,EAAEE,OAAO,IAAID;EAE/B,CAAC,CAAC;EAEF,oBAAOP,OAAA;IAAA,GAAYU,IAAI;IAAEZ,SAAS,EAAEa,OAAQ;IAAAT,QAAA,EAAEA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAClE;AAACC,EAAA,GA5BQf,MAAM;AA8BfA,MAAM,CAACgB,SAAS,GAAG;EACjBC,mBAAmB,EAAEA,CAAC;IAAEf,OAAO;IAAEC,SAAS;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAO,CAAC,KAAK;IACzE,MAAMY,KAAK,GACTC,MAAM,CAAC,CAAC,CAACjB,OAAO,CAAC,GACjBiB,MAAM,CAAC,CAAC,CAAChB,SAAS,CAAC,GACnBgB,MAAM,CAAC,CAAC,CAACd,OAAO,CAAC,GACjBc,MAAM,CAAC,CAAC,CAACf,OAAO,CAAC,GACjBe,MAAM,CAAC,CAAC,CAACb,MAAM,CAAC;IAElB,IAAIY,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,IAAIE,KAAK,CACd,sEACF,CAAC;IACH;EACF;AACF,CAAC;AAED,eAAepB,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA,IAAAe,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}